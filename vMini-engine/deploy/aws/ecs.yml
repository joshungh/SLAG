AWSTemplateFormatVersion: '2010-09-09'
Description: 'ECS Cluster for vMini-engine'

Parameters:
  Environment:
    Type: String
    Default: production
    AllowedValues: [development, production]
  
  VpcId:
    Type: String
    Description: VPC ID
  
  PublicSubnet1:
    Type: String
    Description: Public Subnet 1
  
  PublicSubnet2:
    Type: String
    Description: Public Subnet 2

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub vMini-engine-${Environment}
      CapacityProviders: 
        - FARGATE
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
      Tags:
        - Key: Environment
          Value: !Ref Environment

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub vMini-engine-${Environment}
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: '256'
      Memory: '512'
      ExecutionRoleArn: !ImportValue vMini-engine-security-ECSTaskRoleArn
      ContainerDefinitions:
        - Name: app
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/vMini-engine-${Environment}:latest
          PortMappings:
            - ContainerPort: 8000
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub /ecs/vMini-engine-${Environment}
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: app
          HealthCheck:
            Command: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
            Interval: 30
            Timeout: 5
            Retries: 3

Outputs:
  ClusterArn:
    Description: ECS Cluster ARN
    Value: !GetAtt ECSCluster.Arn
    Export:
      Name: !Sub ${AWS::StackName}-ClusterArn

  TaskDefinitionArn:
    Description: Task Definition ARN
    Value: !Ref TaskDefinition
    Export:
      Name: !Sub ${AWS::StackName}-TaskDefinitionArn 